"Test numeric inequality":
    Input: "{@assert:intEquals /3/4}"
    Throws: ".*assert:intEquals has failed '3' does not equal '4'.*"
"Test numeric less":
    Input: "{@assert:less /2/3}"
    Output: ""
"Test numeric lessOrEqual[less]":
    Input: "{@assert:lessOrEqual /2/3}"
    Output: ""
"Test numeric lessOrEqual[equal]":
    Input: "{@assert:lessOrEquals /2/2}"
    Output: ""
"Test numeric greater":
    Input: "{@assert:greater /4/3}"
    Output: ""
"Test numeric greaterOrEqual[greater]":
    Input: "{@assert:greaterOrEqual /4/3}"
    Output: ""
"Test numeric greaterOrEqual[equal]":
    Input: "{@assert:greaterOrEqual /4/4}"
    Output: ""
"Test numeric less[not]":
    Input: "{@assert:less /4/3}"
    Throws: "assert:less has failed '4' is not less '3'.*"
"Test numeric lessOrEqual[not]":
    Input: "{@assert:lessOrEqual /4/3}"
    Throws: "assert:lessOrEquals has failed '4' is not less or equal '3'"
"Test numeric greater[not]":
    Input: "{@assert:greater /1/3}"
    Throws: "assert:greater has failed '1' is not greater '3'.*"
"Test numeric greaterOrEqual[not]":
    Input: "{@assert:greaterOrEquals /1/3}"
    Throws: "assert:greaterOrEquals? has failed '1' is not greater or equal '3'.*"
"Test format error not enough arguments":
    Input: "{@assert:intEquals 42}"
    Throws: "assert:intEquals needs at least 2 arguments.*"
"Test numericity and fail":
    Input: "{@assert:numeric /2.3a/this is not a number}"
    Throws: "this is not a number.*"
"Test int okay":
    Input: "{@assert:int /2/this is not a number}"
    Output: ""
"Test intEquals":
    Input: "{@assert:intEquals /3/+3}"
    Output: ""
"Test numeric equality[fail 3!=+3 for normal equal]":
    Input: "{@assert:equals /3/+3}"
    Throws: ".*assert:equals has failed '3' does not equal '\\+3'.*"
"Test format error, second parameter is not an integer":
    Input: "{@assert:intEquals /3/this is not a number}"
    Throws: "The parameter in assert:intEquals is not a well formatted integer: 'this is not a number'.*"
"Test format error, first parameter is not an integer":
    Input: "{@assert:intEquals /this is not a number/3}"
    Throws: "The parameter in assert:intEquals is not a well formatted integer: 'this is not a number'.*"
"Test numeric okay, with message":
    Input: "{@assert:numeric /2.3/this is not a number}"
    Output: ""
"Test int and fail":
    Input: "{@assert:int /2.3/this is not an int}"
    Throws: "this is not an int.*"