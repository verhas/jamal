{%@import macrodoc.jim%}
{%#snip:check file={%JAVA_DIR%}Plural.java hash=f74afe22%}
This macro helps to get the plural form of an English word.

Having the plural form of a word is usually not a problem.
In most cases, you just type the plural form.
You may, however, need to get the plural form of a word dynamically.

For example, you want to create a macro to generate a sentence like this:

{%sample/
{@define search(whatnot)=The actual whatnot is searched.
If there are multiple whatnots, the first one is used.}
%}

{%#comment {%output%}%}

You start using your macro and call it as

{%sample/
{search file}
%}

and you get

{%output%}

This is great so far.
The next place you also want to use it as

{%sample/
{search directory}
%}

and you get

{%output%}

This is not what you want.
You want "directories" instead of "directorys".
To solve this issue the macro `plural` comes to rescue.
Define the macro as

{%sample/
{@define search(whatnot)=The actual whatnot is searched.
If there are multiple {@plural whatnot}, the first one is used.}
%}

{%#comment {%output%}%}

Now

{%sample/
{search directory}
%}

will result in

{%output%}

The macro can be used to get the plural form of a word and also to define the plural format of a word.
The latter is useful when the plural form of a word is not regular.
In this case, for example, you can use it as

{%sample/
{@plural child=children}{@plural child}
%}

and it will correctly result in

{%output%}
To get a short list of the most frequently used irregular plural words, use

{%sample/
{@import res:plurals.jim}
%}

The resource file is part of the snippet package.

The algorithm implemented applies special rules when the word ending is `y`.
This applies to words where 'y' is preceded by a consonant, (not a vowel). In English, such words are pluralized by replacing 'y' with 'ies'.
The method first checks if the word ends with 'y' and if the preceding character is not a vowel (a, e, i, o, u).
If the original word ends with an uppercase 'Y', it replaces 'Y' with 'IES'. If it ends with a lowercase 'y', it replaces 'y' with 'ies'.

When the word ending is 's', 'sh', 'ch', 'x', or 'z' they are pluralized by adding 'es'.
The method checks for these endings in both lowercase and uppercase forms.
It then adds 'ES', 'Es', 'eS', or 'es' to the word, depending on the original case of the ending.

In other cases the method simply adds 's' or 'S' to the word.